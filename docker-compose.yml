version: '3.8'

services:
  # Infrastructure services
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: microservices
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2-alpine
    ports:
      - "4222:4222"  # Client connections
      - "8222:8222"  # HTTP monitoring
    command: ["-js", "-m", "8222"]  # Enable JetStream and monitoring
    healthcheck:
      test: ["CMD", "wget", "-q", "-O-", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Example service
  example-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: example-service
    ports:
      - "50051:50051"  # gRPC port
    environment:
      - SERVICE_NAME=example-service
      - GRPC_PORT=50051
      - USE_TLS=true
      - TLS_CERT_FILE=/certs/server-cert.pem
      - TLS_KEY_FILE=/certs/server-key.pem
      - TLS_CA_FILE=/certs/ca-cert.pem
      - TLS_REQUIRE_CLIENT_AUTH=false
      - USE_POSTGRES=true
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=microservices
      - USE_REDIS=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - USE_NATS=true
      - NATS_URL=nats://nats:4222
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy

  # Web client (nginx serving React app with gRPC-Web proxy)
  web-client:
    build:
      context: .
      dockerfile: Dockerfile.web
    ports:
      - "8080:80"    # HTTP (redirects to HTTPS)
      - "8443:443"   # HTTPS
    depends_on:
      example-service:
        condition: service_started
    healthcheck:
      test: ["CMD", "wget", "--no-check-certificate", "-q", "-O-", "https://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
